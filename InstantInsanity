# This script solves the Instant Insanity puzzle.
# 
# from https://en.wikipedia.org/wiki/Instant_Insanity:
# "The puzzle consists of four cubes with faces colored
#  with four colors (red, blue, green, and white).
#  The objective of the puzzle is to stack these cubes
#  in a column so that each side of the stack (front,
#  back, left, and right) shows each of the four colors.
#  The distribution of colors on each cube is unique."

# wrap is a name I give to starting on one face of a cube and 'wrapping'
# around to the next 3 faces. There are 24 possible 'wraps':
wrap = ((0, 1, 5, 4), (0, 2, 5, 3), (0, 3, 5, 2), (0, 4, 5, 1), 
        (1, 0, 4, 5), (1, 2, 4, 3), (1, 3, 4, 2), (1, 5, 4, 0), 
        (2, 0, 3, 5), (2, 1, 3, 4), (2, 4, 3, 1), (2, 5, 3, 0), 
        (3, 0, 2, 5), (3, 1, 2, 4), (3, 4, 2, 1), (3, 5, 2, 0), 
        (4, 0, 1, 5), (4, 2, 1, 3), (4, 3, 1, 2), (4, 5, 1, 0), 
        (5, 1, 0, 4), (5, 2, 0, 3), (5, 3, 0, 2), (5, 4, 0, 1))

# the order of the cube face colors go in order as on a standard
# western die: 1 on top, 2 on front, 3 on right, 4 on left, 5 on back,
# and 6 on bottom.
cube = (('green', 'blue', 'red', 'red', 'yellow', 'red'),
        ('red', 'green', 'yellow', 'red', 'yellow', 'blue'),
        ('red', 'yellow', 'green', 'green', 'blue', 'blue'),
        ('green', 'green', 'yellow', 'blue', 'yellow', 'red'))

# look up the wrap in color-order using the tuples above
def get_wrap(cube, wrap_number):
    result = []
    for n in range(4):
        result.append(cube[wrap[wrap_number][n]])
    return result

# determine if the four wraps have any common colors
def check_wraps(cube1, cube2, cube3, cube4):
    for n in range(4):
        if cube1[n] == cube2[n] or cube1[n] == cube3[n] or cube1[n] == cube4[n] or \
           cube2[n] == cube3[n] or cube2[n] == cube4[n] or cube3[n] == cube4[n]:
            return False
    return True

# consider all 331,776 (24**4) possible configurations of wraps
for a in range(24):
    for b in range(24):
        for c in range(24):
            for d in range(24):
                w = get_wrap(cube[0], a)
                x = get_wrap(cube[1], b)
                y = get_wrap(cube[2], c)
                z = get_wrap(cube[3], d)

                if check_wraps(w, x, y, z):
                    print("Cube 1 in configuration", a)
                    print("Cube 2 in configuration", b)
                    print("Cube 3 in configuration", c)
                    print("Cube 4 in configuration", d)
                    print()
